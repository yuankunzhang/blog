<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on yuankun@net $</title><link>https://yuankun.me/tags/linux/</link><description>Recent content in linux on yuankun@net $</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 07 Jul 2021 20:50:45 +0800</lastBuildDate><atom:link href="https://yuankun.me/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup a Development Machine</title><link>https://yuankun.me/posts/dev-machine-setup/</link><pubDate>Wed, 07 Jul 2021 20:50:45 +0800</pubDate><guid>https://yuankun.me/posts/dev-machine-setup/</guid><description>&lt;p>A few days ago, I did a &lt;a href="https://yuankun.me/posts/home-server-setup" >home server build&lt;/a>. Today I want to have a clean OS reinstallation on my development machine, because of a few things:&lt;/p>
&lt;ul>
&lt;li>The root partition on this machine is almost full (thank you, my two years ago self).&lt;/li>
&lt;li>I got a lot of &lt;code>__common_interrupt: 1.55 No irq handler for vector&lt;/code> errors during the system bootup. There&amp;rsquo;s a thread in the Arch Forum discussing this issue. I tried booting up the system with several different combinations of kernel parameters mentioned in the thread, but none helped. It seems like the only working solution is to upgrade the BIOS firmware.&lt;/li>
&lt;li>I cannot decrypt the root partition without using my bluetooth keyboard, in the meantime I cannot use my bluetooth keyboard before the root partition is decrypted and mounted (because the bluetooth service sits in the root partition). This is a chicken-egg problem. My current hack around is to use a wired USB keyboard to decrypt the root parition. But I desperately want to eliminate the use of this USB keyboard.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://yuankun.me/img/keyboard-not-found-press-any-key.png" alt="Keyboard not found, press any key to continue&amp;amp;hellip;">&lt;/p></description></item><item><title>Setting up a Home Server</title><link>https://yuankun.me/posts/home-server-setup/</link><pubDate>Mon, 21 Jun 2021 20:50:45 +0800</pubDate><guid>https://yuankun.me/posts/home-server-setup/</guid><description>&lt;p>Recently, I came into possession of an old computer. Instead of letting it gather dust in the corner, I thought it would be a good idea to repurpose it as a home server. Primarily, I wanted a Samba Server, but I may go further to run other self-hosted services like NextCloud.&lt;/p>
&lt;p>In this article I&amp;rsquo;ll walk through my home server setup process.&lt;/p></description></item><item><title>Debugging the Linux Kernel with QEMU and GDB</title><link>https://yuankun.me/posts/debugging-the-linux-kernel-with-qemu-and-gdb/</link><pubDate>Fri, 20 Mar 2020 09:31:33 +0800</pubDate><guid>https://yuankun.me/posts/debugging-the-linux-kernel-with-qemu-and-gdb/</guid><description>&lt;p>In the &lt;a href="https://yuankun.me/posts/running-raw-linux-kernel-in-qemu/" >previous article&lt;/a>, we explored how to run a raw Linux kernel in QEMU. Another fascinating feature that QEMU provides is to initiate a GDB server. An external GDB debugger can then connect to it. This means that we can suspend the kernel running at any point of the kernel startup. By leveraging this feature, we can construct an efficient environment to debug system kernels and firmware. In this guide, we will explore the process of using this feature to debug the Linux kernel.&lt;/p></description></item><item><title>Running the Raw Linux Kernel in QEMU</title><link>https://yuankun.me/posts/running-the-raw-linux-kernel-in-qemu/</link><pubDate>Mon, 16 Mar 2020 22:50:52 +0800</pubDate><guid>https://yuankun.me/posts/running-the-raw-linux-kernel-in-qemu/</guid><description>&lt;p>In the &lt;a href="https://yuankun.me/posts/a-guide-on-running-alpine-linux-in-qemu/" >previous post&lt;/a> we learned how to run a packaged Linux distribution in QEMU. This time, let&amp;rsquo;s explore running a raw Linux kernel in QEMU.&lt;/p></description></item><item><title>A Guide on Running Alpine Linux in QEMU</title><link>https://yuankun.me/posts/a-guide-on-running-alpine-linux-in-qemu/</link><pubDate>Sat, 14 Mar 2020 09:41:41 +0800</pubDate><guid>https://yuankun.me/posts/a-guide-on-running-alpine-linux-in-qemu/</guid><description>&lt;p>How to run a Linux operating system in QEMU.&lt;/p></description></item></channel></rss>