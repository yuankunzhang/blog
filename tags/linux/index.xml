<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Yuankun's Blog</title><link>https://yuankun.me/tags/linux/</link><description>Recent content in linux on Yuankun's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 07 Jul 2021 20:50:45 +0800</lastBuildDate><atom:link href="https://yuankun.me/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>My Dev Machine Setup</title><link>https://yuankun.me/posts/dev-machine-setup/</link><pubDate>Wed, 07 Jul 2021 20:50:45 +0800</pubDate><guid>https://yuankun.me/posts/dev-machine-setup/</guid><description>&lt;p>A few days ago, I had a &lt;a href="https://yuankun.me/posts/home-server-setup">home server build&lt;/a>. Today I want to have a clean OS reinstallation on my development machine. The primary reason is that the root partition is almost full (due to short-sightness when I first set up this machine). Apart from that, there are several other issues that I want to tackle:&lt;/p>
&lt;ul>
&lt;li>I got a lot of &lt;code>__common_interrupt: 1.55 No irq handler for vector&lt;/code> errors during the system bootup. There&amp;rsquo;s a thread in the Arch Forum discussing this issue. I tried booting up the system with different kernel parameters, but none helped. Seems like the only solution is to upgrade the BIOS firmware.&lt;/li>
&lt;li>I cannot use my bluetooth keyboard to input decryption key to decrypt the root partition, because the bluetooth service is locked in the root partition and it&amp;rsquo;s a chicken-egg problem. This is quite disturbing, everytime I restarted the machine, I had to wire in my USB keyboard just to input the decryption key.&lt;/li>
&lt;/ul></description></item><item><title>My Home Server Setup</title><link>https://yuankun.me/posts/home-server-setup/</link><pubDate>Mon, 21 Jun 2021 20:50:45 +0800</pubDate><guid>https://yuankun.me/posts/home-server-setup/</guid><description>&lt;p>Recently I got some retired computer hardware. Better than putting it in the corner and let it absorb dust, I&amp;rsquo;ve been planning to turn it into a home server. My main goal is to use it primarily as a Samba Server, but I may go futher to run other self-hosted services like NextCloud.&lt;/p>
&lt;p>In this article I&amp;rsquo;ll talk about my setup of this home server.&lt;/p></description></item><item><title>Debug Linux Kernel With QEMU and GDB</title><link>https://yuankun.me/posts/debug-linux-kernel-with-qemu-and-gdb/</link><pubDate>Fri, 20 Mar 2020 09:31:33 +0800</pubDate><guid>https://yuankun.me/posts/debug-linux-kernel-with-qemu-and-gdb/</guid><description>&lt;p>In last post we see how to run a raw Linux kernel in QEMU. QEMU offers another fancy feature: it can start a GDB Server and external GDB Debugger to connect. With this we can build a comfortable environment to debug system kernels and firmware. Let&amp;rsquo;s see how to leverage this feature to debug the Linux kernel.&lt;/p></description></item><item><title>Running Raw Linux Kernel in QEMU</title><link>https://yuankun.me/posts/running-raw-linux-kernel-in-qemu/</link><pubDate>Mon, 16 Mar 2020 22:50:52 +0800</pubDate><guid>https://yuankun.me/posts/running-raw-linux-kernel-in-qemu/</guid><description>&lt;p>In last post we see how to run a packed Linux distribution in QEMU. This time let&amp;rsquo;s check out how to run a raw Linux kernel in QEMU.&lt;/p></description></item><item><title>Running Alpine Linux in QEMU</title><link>https://yuankun.me/posts/running-alpine-linux-in-qemu/</link><pubDate>Sat, 14 Mar 2020 09:41:41 +0800</pubDate><guid>https://yuankun.me/posts/running-alpine-linux-in-qemu/</guid><description>&lt;p>How to run a Linux operating system in QEMU.&lt;/p></description></item></channel></rss>