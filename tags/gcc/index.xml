<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>gcc - Tag - yuankun@net: ~$</title><link>https://yuankun.me/tags/gcc/</link><description>gcc - Tag - yuankun@net: ~$</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 06 Jun 2023 19:59:32 +0800</lastBuildDate><atom:link href="https://yuankun.me/tags/gcc/" rel="self" type="application/rss+xml"/><item><title>The Cleanup Variable Attribute in GCC</title><link>https://yuankun.me/posts/the-cleanup-variable-attribute-in-gcc/</link><pubDate>Tue, 06 Jun 2023 19:59:32 +0800</pubDate><author><name>yuankun</name></author><guid>https://yuankun.me/posts/the-cleanup-variable-attribute-in-gcc/</guid><description>C++ has a powerful idiom called RAII (Resource Acquisition Is Initialization)[^1], although the name might leave something to be desired. The fundamental idea is to represent a resource by a local object, tying the resource&amp;rsquo;s lifecycle to the lifecycle of the local object&amp;rsquo; lifecycle. In other words, we could say the local object is the owner of the resource (Hmm, I smell something rusty here). The local object is responsible for releasing the resource in its destructor.</description></item></channel></rss>