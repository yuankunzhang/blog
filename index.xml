<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Yuankun&#39;s Blog</title>
    <link>https://yuankun.me/</link>
    <description>Recent content on Yuankun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 03 Jan 2022 20:50:45 +0800</lastBuildDate><atom:link href="https://yuankun.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://yuankun.me/page/about/</link>
      <pubDate>Mon, 03 Jan 2022 20:50:45 +0800</pubDate>
      
      <guid>https://yuankun.me/page/about/</guid>
      <description>A coder.</description>
    </item>
    
    <item>
      <title>My Dev Machine Setup</title>
      <link>https://yuankun.me/posts/dev-machine-setup/</link>
      <pubDate>Wed, 07 Jul 2021 20:50:45 +0800</pubDate>
      
      <guid>https://yuankun.me/posts/dev-machine-setup/</guid>
      <description>&lt;p&gt;A few days ago, I had a &lt;a href=&#34;https://yuankun.me/posts/home-server-setup&#34;&gt;home server build&lt;/a&gt;. Today I want to have a clean OS reinstallation on my development machine. The primary reason is that the root partition is almost full (due to short-sightness when I first set up this machine). Apart from that, there are several other issues that I want to tackle:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I got a lot of &lt;code&gt;__common_interrupt: 1.55 No irq handler for vector&lt;/code&gt; errors during the system bootup. There&amp;rsquo;s a thread in the Arch Forum discussing this issue. I tried booting up the system with different kernel parameters, but none helped. Seems like the only solution is to upgrade the BIOS firmware.&lt;/li&gt;
&lt;li&gt;I cannot use my bluetooth keyboard to input decryption key to decrypt the root partition, because the bluetooth service is locked in the root partition and it&amp;rsquo;s a chicken-egg problem. This is quite disturbing, everytime I restarted the machine, I had to wire in my USB keyboard just to input the decryption key.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>My Home Server Setup</title>
      <link>https://yuankun.me/posts/home-server-setup/</link>
      <pubDate>Mon, 21 Jun 2021 20:50:45 +0800</pubDate>
      
      <guid>https://yuankun.me/posts/home-server-setup/</guid>
      <description>&lt;p&gt;Recently I got some retired computer hardware. Better than putting it in the corner and let it absorb dust, I&amp;rsquo;ve been planning to turn it into a home server. My main goal is to use it primarily as a Samba Server, but I may go futher to run other self-hosted services like NextCloud.&lt;/p&gt;
&lt;p&gt;In this article I&amp;rsquo;ll talk about my setup of this home server.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Terraform Module to List Google Cloud Service Agents</title>
      <link>https://yuankun.me/posts/a-terraform-module-to-list-google-cloud-service-agents/</link>
      <pubDate>Wed, 01 Apr 2020 23:47:03 +0800</pubDate>
      
      <guid>https://yuankun.me/posts/a-terraform-module-to-list-google-cloud-service-agents/</guid>
      <description>&lt;p&gt;There are &lt;a href=&#34;https://cloud.google.com/iam/docs/service-accounts#types_of_service_accounts&#34;&gt;two types of service accounts&lt;/a&gt; in Google Cloud: user-managed service accounts, which are used by user applications to talk to Google Cloud; and Google-managed services accounts, which are used by Google Cloud internally. Among the second category, there is a special subtype of service accounts called Google Cloud Service Agents. Service Agents are used by Google Cloud services to run internal processes so that user requested operations can be fulfilled.&lt;/p&gt;
&lt;p&gt;A service agent has the following pattern:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;service-PROJECT_NUMBER@SERVICE_NAME.iam.gserviceaccount.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can spot the service agents from the IAM section of Google Cloud Console.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://yuankun.me/img/20200402-0012.png&#34; alt=&#34;Service Agents&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;When managing IAM binding policies via Terraform, these service agents often generate noises. As an example, I&amp;rsquo;ll show you a code snippet coming from one of our Terraform files (I&amp;rsquo;m using &lt;code&gt;xxxxx&lt;/code&gt; instead of the real project number).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Debug Linux Kernel With QEMU and GDB</title>
      <link>https://yuankun.me/posts/debug-linux-kernel-with-qemu-and-gdb/</link>
      <pubDate>Fri, 20 Mar 2020 09:31:33 +0800</pubDate>
      
      <guid>https://yuankun.me/posts/debug-linux-kernel-with-qemu-and-gdb/</guid>
      <description>&lt;p&gt;In last post we see how to run a raw Linux kernel in QEMU. QEMU offers another fancy feature: it can start a GDB Server and external GDB Debugger to connect. With this we can build a comfortable environment to debug system kernels and firmware. Let&amp;rsquo;s see how to leverage this feature to debug the Linux kernel.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Running Raw Linux Kernel in QEMU</title>
      <link>https://yuankun.me/posts/running-raw-linux-kernel-in-qemu/</link>
      <pubDate>Mon, 16 Mar 2020 22:50:52 +0800</pubDate>
      
      <guid>https://yuankun.me/posts/running-raw-linux-kernel-in-qemu/</guid>
      <description>&lt;p&gt;In last post we see how to run a packed Linux distribution in QEMU. This time let&amp;rsquo;s check out how to run a raw Linux kernel in QEMU.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Running Alpine Linux in QEMU</title>
      <link>https://yuankun.me/posts/running-alpine-linux-in-qemu/</link>
      <pubDate>Sat, 14 Mar 2020 09:41:41 +0800</pubDate>
      
      <guid>https://yuankun.me/posts/running-alpine-linux-in-qemu/</guid>
      <description>&lt;p&gt;How to run a Linux operating system in QEMU.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Publishing Subdirectory to Github Pages</title>
      <link>https://yuankun.me/posts/publishing-subdirectory-to-github-pages/</link>
      <pubDate>Thu, 12 Mar 2020 22:14:58 +0800</pubDate>
      
      <guid>https://yuankun.me/posts/publishing-subdirectory-to-github-pages/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m using Hugo + Github Pages as my personal blog platform. A Hugo site yields the following directory structure, where the &lt;code&gt;public/&lt;/code&gt; subdirectory stores the generated static pages:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;├── archetypes/
├── config.toml
├── content/
├── data/
├── layouts/
├── public/
├── resources/
├── static/
└── themes/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;How do I publish the &lt;code&gt;public/&lt;/code&gt; subdirectory, instead of the root directory, to Github Pages?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Who Am I</title>
      <link>https://yuankun.me/about/</link>
      <pubDate>Mon, 09 Mar 2020 14:29:36 +0800</pubDate>
      
      <guid>https://yuankun.me/about/</guid>
      <description>YUANKUN ZHANG Linux User&amp;#39;s Manual YUANKUN ZHANG(8) NAME Yuankun Zhang - a programmer SYNOPSIS yuankun [--devops] [--opensource] [--linux-user] [--father] SUMMARY Hi there! I&amp;#39;m a passionate programmer, and I code for fun. I am familiar with DevOps technologies. I use Arch Linux. In my spare time, I like running and playing badminton. OPTIONS --devops I have experience in the DevOps practices and am familar with the tools and approaches used in this space.</description>
    </item>
    
    
    
  </channel>
</rss>
